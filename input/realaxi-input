#
# BEC-GP-OMP codes are developed and (c)opyright-ed by:
#
# Luis E. Young-S., Sadhan K. Adhikari
# (UNESP - Sao Paulo State University, Brazil)
#
# Paulsamy Muruganandam
# (Bharathidasan University, Tamil Nadu, India)
#
# Dusan Vudragovic, Antun Balaz
# (Scientific Computing Laboratory, Institute of Physics Belgrade, Serbia)
#
# Public use and modification of this code are allowed provided that the
# following three papers are cited:
#
# [1] L. E. Young-S. et al., Comput. Phys. Commun. 204 (2016) 209.
# [2] P. Muruganandam, S. K. Adhikari, Comput. Phys. Commun. 180 (2009) 1888.
# [3] D. Vudragovic et al., Comput. Phys. Commun. 183 (2012) 2021.
#
# The authors would be grateful for all information and/or comments
# regarding the use of the code.
#

# Parameter input file for solving the time-independent Gross–Pitaevskii
# nonlinear partial differential equation in an axially-symmetric trap
# using split-step Crank-Nicolson method.

#  Type of rescaling of Gross–Pitaevskii equation.
#  Possible values: 1, 2, and 3.
#  Required: yes
#  Type: int
   OPTION = 2

#  Coefficient of the nonlinear term. If not defined, G0 is calculated as
#     G0 = 4 * Pi * AS * NATOMS * a0
#  where AS is contact interaction strength, NATOMS number of atoms in
#  condensate, and a0 Bohr radius.
#  Required: no
#  Type: double
#   G0 = 18.81

#  Number of atoms in condensate. Required if G0 is not defined.
#  Required: conditionally
#  Type: long
   NATOMS = 120000

#  Unit of length. Required if G0 is not defined.
#  Required: conditionally
#  Type: double
   AHO = 1.22823e-6

#  Contact interaction strength in units of Bohr radius. Required if G0 is not
#  defined.
#  Required: conditionally
#  Type: double
   AS = 100.

#  Coefficient that multiplies nonlinear term in non-stationary problem during
#  final NRUN iterations.
#  Required: yes
#  Type: double
   GPAR = 1.0

#  Number of discretization points in the rho-direction.
#  Required: yes
#  Type: long
   NRHO = 750

#  Number of discretization points in the z-direction.
#  Required: yes
#  Type: long
   NZ = 1500

#  Spatial discretization step in the rho-direction.
#  Required: yes
#  Type: double
   DRHO = 0.02

#  Spatial discretization step in the z-direction.
#  Required: yes
#  Type: double
   DZ = 0.02

#  Time discretization step.
#  Required: yes
#  Type: double
   DT = 0.0001

#  Kappa coefficient of anisotropy of the trap (omega_phi / omega_rho).
#  Required: yes
#  Type: double
   NU = 1.

#  Lambda coefficient of anisotropy of the trap (omega_z / omega_rho).
#  Required: yes
#  Type: double
   LAMBDA = 1.

#  Amplitude of shaking
#  Required: yes
#  Type: double
   AMP = 0.0

#  Amplitude of shaking
#  Required: yes
#  Type: double
   ZAMP = 3.0

#  frequency of shaking
#  Required: yes
#  Type: double
   FREQ = 4.286

#  Number of iterations to introduce the nonlinearity G0.
#  If NSTP = 0, the program need to read the density file: imagaxi-den.txt
#  Required: yes
#  Type: long
   NSTP = 0

#  Number of subsequent iterations with fixed nonlinearity G0.
#  Required: yes
#  Type: long
   NPAS = 50000

#  Number of final iterations with fixed nonlinearity G0.
#  Required: yes
#  Type: long
   NRUN = 0

#  Output file with the summary of final values of all physical quantities. If
#  not defined, standard output will be used.
#  Required: no
#  Type: string
   OUTPUT = realaxi-out

#  Output file with RMS values. The values are written after initialization,
#  subsequent NSTP, NPAS, and final NRUN iterations.
#  Required: no
#  Type: string
   RMSOUT = realaxi-rms

#  Output file with RMS values during the time evolution. The values are written in
#  subsequent NPAS and final NRUN iterations.
#  Required: no
#  Type: string
   DYNAOUT = realaxi-dyna

#  Output file with the initial wave function. If not defined, the initial wave
#  function will not be saved.
#  Required: no
#  Type: string
#   INITOUT = realaxi-den-init

#  Output file with the wave function obtained after the first NSTP iterations,
#  which introduce nonlinearity G0. If not defined, the wave function will not
#  be saved.
#  Required: no
#  Type: string
#   NSTPOUT = realaxi-den-nstp

#  Output file with the wave function obtained after the subsequent NPAS
#  iterations, with the fixed nonlinearity G0. If not defined, the wave function
#  Required: no
#  Type: string
   NPASOUT = realaxi-den

#  Output file with the final wave function obtained after the final NRUN
#  iterations. If not defined, the wave function will not be saved.
#  Required: no
#  Type: string
#   NRUNOUT = realaxi-den-nrun

#  Output file with the wave function obtained after the subsequent NPAS
#  iterations, with the fixed nonlinearity G0. If not defined, the wave function
#  Required: no
#  Type: string
   TEMPOUT = realaxi-tmp

#  Discretization step in the rho-direction used to save wave functions. Required
#  if any of wave function output files (INITOUT, NPASOUT, NRUNOUT) is defined.
#  Required: conditionally
#  Type: long
   OUTSTPRHO = 1

#  Discretization step in the z-direction used to save wave functions. Required
#  if any of wave function output files (INITOUT, NPASOUT, NRUNOUT) is defined.
#  Required: conditionally
#  Type: long
   OUTSTPZ = 1

#  Time discretization step used to save RMS of the wave function.
#  Required if DYNAOUT is defined.
#  Required: conditionally
#  Type: long
   OUTSTPT = 50

#  Time discretization step used to save RMS of the wave function.
#  Required if DYNAOUT is defined.
#  Required: conditionally
#  Type: long
   OUTSTPWF = 5000
